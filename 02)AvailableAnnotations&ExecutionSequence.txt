https://www.javatpoint.com/testng-annotations

Annotations:
===========
TestNG Annotation	Description

@BeforeSuite	The @BeforeSuite annotated method will run before the execution of all the test methods in the suite.
@AfterSuite	The @AfterSuite annotated method will run after the execution of all the test methods in the suite.
@BeforeTest	The @BeforeTest annotated method will be executed before the execution of all the test methods of available classes belonging to that folder.
@AfterTest	The @AfterTest annotated method will be executed after the execution of all the test methods of available classes belonging to that folder.
@BeforeClass	The @BeforeClass annotated method will be executed before the first method of the current class is invoked.
@AfterClass	The @AfterClass annotated method will be invoked after the execution of all the test methods of the current class.
@BeforeMethod	The @BeforeMethod annotated method will be executed before each test method will run.
@AfterMethod	The @AfterMethod annotated method will run after the execution of each test method.
@BeforeGroups	The @BeforeGroups annotated method run only once for a group before the execution of all test cases belonging to that group.
@AfterGroups	The @AfterGroups annotated method run only once for a group after the execution of all test cases belonging to that group.


Hierarchy:
=========
@BeforeSuite
@BeforeTest
@BeforeClass
@BeforeMethod
@Test
@AfterMethod
@AfterClass
@AfterTest
@AfterSuite
===============

import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class FirstTestNgClass {

	@BeforeClass
	private void beforeClass() {
		System.out.println("Before Class Method");

	}

	@AfterClass
	private void afterClassMethod() {
		System.out.println("After Class Method");

	}

	@BeforeMethod
	private void beforeMethod() {
		System.out.println("before  Method");
	}

	@AfterMethod
	private void aftermethod() {
		System.out.println("After  Method");

	}

	@Test
	private void testMethod1() {
		System.out.println("testMethod1");
	}

	@Test
	private void testMethod2() {
		System.out.println("testMethod2");

	}

	@Test
	private void testMethod3() {
		System.out.println("testMethod3");

	}
}
